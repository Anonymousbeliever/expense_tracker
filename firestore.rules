rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Authentication check
    function isAuthenticated() {
      return request.auth != null;
    }

    // Ownership check
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection - only owner can read/write
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // Expenses collection - only owner can read/write
    match /expenses/{expenseId} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Categories - read-only
    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if false;
    }

    // Premium features
    match /premium/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // Analytics
    match /analytics/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if false;
    }

    // Backups
    match /backups/{userId}/{backupId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // Block everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
